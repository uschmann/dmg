; defines
DEFAULT_LIFES 	EQU  $3 ; The number of lifes when the game start

; constant data
TXT_LIFES
	DB	"LIFES:"
TXT_LIFES_END

; **
; Starts a new game
; **
startGame:
	call	.init
	jp	.gameLoop

; **
; Initialises the game
; **
.init:
	ld	a,DEFAULT_LIFES
	ld	[_LIFES],a
	ret

; **
; The main game loop
; **
.gameLoop:
	call 	.readInput		; read Input
	call	.gameLogic		; game logic is here
	call	.drawView		; draw the game screen
	jr	.gameLoop

; **
; Reads user input from the keypad and stores the state of the buttons in _PAD
; **
.readInput:
	call	readPad			; read the status of the buttons
	ret

; **
; Updates model value and sets the state of the game
; **
.gameLogic:
	ret

; **
; Updates the screen according to the model data and game state
; **
.drawView:
	call	.drawNumberOfLifes
	ret

.drawNumberOfLifes
	ld	hl, TXT_LIFES			; Display lifes-label
	ld	de, _SCRN0
	ld	bc, TXT_LIFES_END - TXT_LIFES
	call	mem_CopyVRAM

	ld	a,[_LIFES]				; Draw lifes
	ld	c,a				
	ld	d,TXT_LIFES_END - TXT_LIFES 			
	call	printHex

	ret