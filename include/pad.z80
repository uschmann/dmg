;Key defines
KEY_A       EQU $01
KEY_B       EQU $02
KEY_SELECT  EQU $04
KEY_START   EQU $08
KEY_RIGHT   EQU $10
KEY_LEFT    EQU $20
KEY_UP      EQU $40
KEY_DOWN    EQU $08

;****
; Reads the status of the buttons and stores it in a variable at label _PAD
;****
readPad:
    ld  a,[_PAD]
    ld  [_PAD_OLD],a

    ; init
    ld      a, 0
    ld      [_PAD], a

    ; read the d-pad:
    ld      a, %00100000    ; bit 4 = 0, bit 5 = 1 (d-pad on, buttons off)
    ld      [rP1], a
    ; read the status of the d-pad
    ; we do several reads because of bouncing
    ld      a, [rP1]
    ld      a, [rP1]
    ld      a, [rP1]
    ld      a, [rP1]

    and     $0F             ; just keep low nibble (d-pad status)
    swap    a               ; swap low and high nibbles
    ld      b, a            ; save d-pad status in b register

    ; let's read the buttons
    ld      a, %00010000    ; bit 4 = 1, bit 5 = 0 (buttons on, d-pad off)
    ld      [rP1], a

    ; bouncing...
    ld      a, [rP1]
    ld      a, [rP1]
    ld      a, [rP1]
    ld      a, [rP1]
    ld      a, [rP1]
    ld      a, [rP1]

    ; we have in "a" the status of the buttons
    and     $0F             ; just keep low nibble.
    or      b               ; OR with "b" to put in the high byte of "a"
                            ; the d-pad status.

    ; now we have in "a" the status of all the controls
    ; make the complement of it (so activated buttons read as 1)
    ; and save it 
    cpl
    ld      [_PAD], a

    ; reset the joypad
    ld      a,$30
    ld      [rP1], a

    ld  a,[_PAD_OLD]        ; Store newly pressed buttons in _PAD_DOWN
    ld  b,a

    ld  a,[_PAD]
    xor b

    ld  b,a
    ld  a,[_PAD]
    and b
    ld  [_PAD_DOWN],a

    ret